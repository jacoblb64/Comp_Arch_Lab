/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 8000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 0.0;
	GRID_DUTY_CYCLE = 50;
}




SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek11")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek11[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek11";
}

SIGNAL("ek11[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek11";
}

SIGNAL("ek11[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek11";
}

SIGNAL("ek11[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek11";
}

SIGNAL("ek12")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek12[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek12";
}

SIGNAL("ek12[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek12";
}

SIGNAL("ek12[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek12";
}

SIGNAL("ek12[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek12";
}

SIGNAL("ek13")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek13[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek13";
}

SIGNAL("ek13[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek13";
}

SIGNAL("ek13[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek13";
}

SIGNAL("ek13[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek13";
}

SIGNAL("ek21")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek21[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek21";
}

SIGNAL("ek21[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek21";
}

SIGNAL("ek21[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek21";
}

SIGNAL("ek21[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek21";
}

SIGNAL("ek22")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek22[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek22";
}

SIGNAL("ek22[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek22";
}

SIGNAL("ek22[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek22";
}

SIGNAL("ek22[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek22";
}

SIGNAL("ek23")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek23[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek23";
}

SIGNAL("ek23[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek23";
}

SIGNAL("ek23[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek23";
}

SIGNAL("ek23[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek23";
}

SIGNAL("ek31")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek31[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek31";
}

SIGNAL("ek31[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek31";
}

SIGNAL("ek31[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek31";
}

SIGNAL("ek31[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek31";
}

SIGNAL("ek32")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek32[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek32";
}

SIGNAL("ek32[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek32";
}

SIGNAL("ek32[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek32";
}

SIGNAL("ek32[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek32";
}

SIGNAL("ek33")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ek33[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek33";
}

SIGNAL("ek33[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek33";
}

SIGNAL("ek33[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek33";
}

SIGNAL("ek33[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ek33";
}

SIGNAL("dk11")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk11[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk11";
}

SIGNAL("dk11[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk11";
}

SIGNAL("dk11[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk11";
}

SIGNAL("dk11[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk11";
}

SIGNAL("dk12")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk12[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk12";
}

SIGNAL("dk12[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk12";
}

SIGNAL("dk12[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk12";
}

SIGNAL("dk12[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk12";
}

SIGNAL("dk13")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk13[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk13";
}

SIGNAL("dk13[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk13";
}

SIGNAL("dk13[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk13";
}

SIGNAL("dk13[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk13";
}

SIGNAL("dk21")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk21[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk21";
}

SIGNAL("dk21[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk21";
}

SIGNAL("dk21[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk21";
}

SIGNAL("dk21[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk21";
}

SIGNAL("dk22")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk22[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk22";
}

SIGNAL("dk22[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk22";
}

SIGNAL("dk22[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk22";
}

SIGNAL("dk22[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk22";
}

SIGNAL("dk23")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk23[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk23";
}

SIGNAL("dk23[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk23";
}

SIGNAL("dk23[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk23";
}

SIGNAL("dk23[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk23";
}

SIGNAL("dk31")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk31[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk31";
}

SIGNAL("dk31[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk31";
}

SIGNAL("dk31[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk31";
}

SIGNAL("dk31[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk31";
}

SIGNAL("dk32")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk32[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk32";
}

SIGNAL("dk32[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk32";
}

SIGNAL("dk32[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk32";
}

SIGNAL("dk32[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk32";
}

SIGNAL("dk33")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dk33[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk33";
}

SIGNAL("dk33[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk33";
}

SIGNAL("dk33[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk33";
}

SIGNAL("dk33[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dk33";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
	}
}
TRANSITION_LIST("ek11[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1500.0;
	}
}
TRANSITION_LIST("ek11[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1500.0;
	}
}
TRANSITION_LIST("ek11[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1500.0;
	}
}
TRANSITION_LIST("ek11[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1500.0;
	}
}
TRANSITION_LIST("ek12[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1500.0;
	}
}
TRANSITION_LIST("ek12[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 2100.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 1600.0;
	}
}
TRANSITION_LIST("ek12[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1500.0;
	}
}
TRANSITION_LIST("ek12[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1500.0;
	}
}
TRANSITION_LIST("ek13[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1600.0;
	}
}
TRANSITION_LIST("ek13[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1600.0;
	}
}
TRANSITION_LIST("ek13[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1600.0;
	}
}
TRANSITION_LIST("ek13[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1500.0;
	}
}
TRANSITION_LIST("ek21[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1600.0;
	}
}
TRANSITION_LIST("ek21[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1500.0;
	}
}
TRANSITION_LIST("ek21[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1800.0;
	}
}
TRANSITION_LIST("ek21[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1500.0;
	}
}
TRANSITION_LIST("ek22[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1700.0;
	}
}
TRANSITION_LIST("ek22[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 1600.0;
	}
}
TRANSITION_LIST("ek22[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1600.0;
	}
}
TRANSITION_LIST("ek22[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 1500.0;
	}
}
TRANSITION_LIST("ek23[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 2100.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 1600.0;
	}
}
TRANSITION_LIST("ek23[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1500.0;
	}
}
TRANSITION_LIST("ek23[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1600.0;
	}
}
TRANSITION_LIST("ek23[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1600.0;
	}
}
TRANSITION_LIST("ek31[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1500.0;
	}
}
TRANSITION_LIST("ek31[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1500.0;
	}
}
TRANSITION_LIST("ek31[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1600.0;
	}
}
TRANSITION_LIST("ek31[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1600.0;
	}
}
TRANSITION_LIST("ek32[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 1500.0;
	}
}
TRANSITION_LIST("ek32[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1500.0;
	}
}
TRANSITION_LIST("ek32[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1500.0;
	}
}
TRANSITION_LIST("ek32[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 1500.0;
	}
}
TRANSITION_LIST("ek33[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1600.0;
	}
}
TRANSITION_LIST("ek33[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1600.0;
	}
}
TRANSITION_LIST("ek33[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 2100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 1600.0;
	}
}
TRANSITION_LIST("ek33[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1500.0;
	}
}
TRANSITION_LIST("dk11[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.85;
		LEVEL 0 FOR 452.596;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1143.554;
	}
}
TRANSITION_LIST("dk11[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.821;
		LEVEL 0 FOR 1352.596;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1043.583;
	}
}
TRANSITION_LIST("dk11[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.031;
		LEVEL 0 FOR 452.596;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1243.373;
	}
}
TRANSITION_LIST("dk11[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.8;
		LEVEL 0 FOR 1252.596;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1443.604;
	}
}
TRANSITION_LIST("dk12[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.718;
		LEVEL 0 FOR 1352.584;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 1143.698;
	}
}
TRANSITION_LIST("dk12[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.721;
		LEVEL 0 FOR 452.584;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1043.695;
	}
}
TRANSITION_LIST("dk12[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.969;
		LEVEL 0 FOR 1252.584;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 1243.447;
	}
}
TRANSITION_LIST("dk12[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.932;
		LEVEL 0 FOR 2252.584;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1800.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1443.484;
	}
}
TRANSITION_LIST("dk13[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.379;
		LEVEL 0 FOR 1252.569;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1443.052;
	}
}
TRANSITION_LIST("dk13[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.148;
		LEVEL 0 FOR 1352.569;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1800.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 1143.283;
	}
}
TRANSITION_LIST("dk13[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.256;
		LEVEL 0 FOR 1252.569;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 1043.175;
	}
}
TRANSITION_LIST("dk13[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.269;
		LEVEL 0 FOR 452.569;
		LEVEL 1 FOR 1900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1300.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1243.162;
	}
}
TRANSITION_LIST("dk21[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.172;
		LEVEL 0 FOR 452.569;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1900.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 1243.259;
	}
}
TRANSITION_LIST("dk21[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.306;
		LEVEL 0 FOR 1252.569;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1143.125;
	}
}
TRANSITION_LIST("dk21[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.05;
		LEVEL 0 FOR 452.569;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1043.381;
	}
}
TRANSITION_LIST("dk21[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.131;
		LEVEL 0 FOR 2252.569;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1243.3;
	}
}
TRANSITION_LIST("dk22[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.987;
		LEVEL 0 FOR 452.597;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 1043.416;
	}
}
TRANSITION_LIST("dk22[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.021;
		LEVEL 0 FOR 1252.597;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 1900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1800.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1243.382;
	}
}
TRANSITION_LIST("dk22[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.988;
		LEVEL 0 FOR 2252.597;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1443.415;
	}
}
TRANSITION_LIST("dk22[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.031;
		LEVEL 0 FOR 452.597;
		LEVEL 1 FOR 1800.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1543.372;
	}
}
TRANSITION_LIST("dk23[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.03;
		LEVEL 0 FOR 452.571;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1043.399;
	}
}
TRANSITION_LIST("dk23[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.99;
		LEVEL 0 FOR 452.571;
		LEVEL 1 FOR 1900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1143.439;
	}
}
TRANSITION_LIST("dk23[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.969;
		LEVEL 0 FOR 452.571;
		LEVEL 1 FOR 1800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 1043.46;
	}
}
TRANSITION_LIST("dk23[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.024;
		LEVEL 0 FOR 3252.571;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 2800.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 1243.405;
	}
}
TRANSITION_LIST("dk31[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.011;
		LEVEL 0 FOR 1252.587;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1043.402;
	}
}
TRANSITION_LIST("dk31[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.021;
		LEVEL 0 FOR 1252.587;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 1143.392;
	}
}
TRANSITION_LIST("dk31[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.775;
		LEVEL 0 FOR 1252.587;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1043.638;
	}
}
TRANSITION_LIST("dk31[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.747;
		LEVEL 0 FOR 452.587;
		LEVEL 1 FOR 1800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 3000.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 1243.666;
	}
}
TRANSITION_LIST("dk32[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.341;
		LEVEL 0 FOR 452.57;
		LEVEL 1 FOR 1900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1043.089;
	}
}
TRANSITION_LIST("dk32[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.802;
		LEVEL 0 FOR 452.57;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1500.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1143.628;
	}
}
TRANSITION_LIST("dk32[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.358;
		LEVEL 0 FOR 452.57;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 1043.072;
	}
}
TRANSITION_LIST("dk32[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.107;
		LEVEL 0 FOR 2252.57;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1243.323;
	}
}
TRANSITION_LIST("dk33[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.03;
		LEVEL 0 FOR 1252.582;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1043.388;
	}
}
TRANSITION_LIST("dk33[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.789;
		LEVEL 0 FOR 2252.582;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1143.629;
	}
}
TRANSITION_LIST("dk33[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.032;
		LEVEL 0 FOR 1252.582;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 1043.386;
	}
}
TRANSITION_LIST("dk33[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.239;
		LEVEL 0 FOR 452.582;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 1243.179;
	}
}


DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ek11";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "ek11[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ek11[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ek11[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ek11[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ek12";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "ek12[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "ek12[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "ek12[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "ek12[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "ek13";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15;
}

DISPLAY_LINE
{
	CHANNEL = "ek13[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ek13[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ek13[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ek13[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ek21";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
	CHILDREN = 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "ek21[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "ek21[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "ek21[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "ek21[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "ek22";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25;
}

DISPLAY_LINE
{
	CHANNEL = "ek22[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "ek22[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "ek22[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "ek22[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "ek23";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
	CHILDREN = 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "ek23[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "ek23[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "ek23[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "ek23[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "ek31";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "ek31[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "ek31[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "ek31[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "ek31[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "ek32";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40;
}

DISPLAY_LINE
{
	CHANNEL = "ek32[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "ek32[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "ek32[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "ek32[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "ek33";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
	CHILDREN = 42, 43, 44, 45;
}

DISPLAY_LINE
{
	CHANNEL = "ek33[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "ek33[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "ek33[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "ek33[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "dk11";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
	CHILDREN = 47, 48, 49, 50;
}

DISPLAY_LINE
{
	CHANNEL = "dk11[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "dk11[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "dk11[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "dk11[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "dk12";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 0;
	CHILDREN = 52, 53, 54, 55;
}

DISPLAY_LINE
{
	CHANNEL = "dk12[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "dk12[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "dk12[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "dk12[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "dk13";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
	CHILDREN = 57, 58, 59, 60;
}

DISPLAY_LINE
{
	CHANNEL = "dk13[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "dk13[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "dk13[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "dk13[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "dk21";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
	CHILDREN = 62, 63, 64, 65;
}

DISPLAY_LINE
{
	CHANNEL = "dk21[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dk21[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dk21[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dk21[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "dk22";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
	CHILDREN = 67, 68, 69, 70;
}

DISPLAY_LINE
{
	CHANNEL = "dk22[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "dk22[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "dk22[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "dk22[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "dk23";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
	CHILDREN = 72, 73, 74, 75;
}

DISPLAY_LINE
{
	CHANNEL = "dk23[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "dk23[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "dk23[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "dk23[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "dk31";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 0;
	CHILDREN = 77, 78, 79, 80;
}

DISPLAY_LINE
{
	CHANNEL = "dk31[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "dk31[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "dk31[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "dk31[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "dk32";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 0;
	CHILDREN = 82, 83, 84, 85;
}

DISPLAY_LINE
{
	CHANNEL = "dk32[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "dk32[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "dk32[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "dk32[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 81;
}

DISPLAY_LINE
{
	CHANNEL = "dk33";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 0;
	CHILDREN = 87, 88, 89, 90;
}

DISPLAY_LINE
{
	CHANNEL = "dk33[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "dk33[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "dk33[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "dk33[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 86;
}
TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
